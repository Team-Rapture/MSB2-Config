# Configuration file

energyhatch {

    tiny {
        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 2147483647, default: 128]
        I:limit=153125

        # Energy storage size of the energy hatch. [range: 1 ~ 2147483647, default: 2048]
        I:size=1531250

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12, default: 1]
        I:tier=1
    }

    small {
        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 2147483647, default: 512]
        I:limit=306250

        # Energy storage size of the energy hatch. [range: 1 ~ 2147483647, default: 4096]
        I:size=3062500

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12, default: 2]
        I:tier=2
    }

    normal {
        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 2147483647, default: 512]
        I:limit=612500

        # Energy storage size of the energy hatch. [range: 1 ~ 2147483647, default: 8192]
        I:size=6125000

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12, default: 2]
        I:tier=2
    }

    reinforced {
        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 2147483647, default: 2048]
        I:limit=1250000

        # Energy storage size of the energy hatch. [range: 1 ~ 2147483647, default: 16384]
        I:size=12500000

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12, default: 3]
        I:tier=3
    }

    big {
        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 2147483647, default: 8192]
        I:limit=2500000

        # Energy storage size of the energy hatch. [range: 1 ~ 2147483647, default: 32768]
        I:size=25000000

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12, default: 4]
        I:tier=4
    }

    huge {
        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 2147483647, default: 32768]
        I:limit=5000000

        # Energy storage size of the energy hatch. [range: 1 ~ 2147483647, default: 131072]
        I:size=50000000

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12, default: 5]
        I:tier=5
    }

    ludicrous {
        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 2147483647, default: 131072]
        I:limit=10000000

        # Energy storage size of the energy hatch. [range: 1 ~ 2147483647, default: 524288]
        I:size=100000000

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12, default: 6]
        I:tier=6
    }

    ultimate {
        # Defines the transfer limit for RF/FE things. IC2's transfer limit is defined by the voltage tier. [range: 1 ~ 2147483647, default: 131072]
        I:limit=20000000

        # Energy storage size of the energy hatch. [range: 1 ~ 2147483647, default: 2097152]
        I:size=200000000

        # Defines the IC2 output-voltage tier. Only affects the power the output hatches will output power as. 0 = 'ULV' = 8 EU/t, 1 = 'LV' = 32 EU/t, 2 = 'MV' = 128 EU/t, ... [range: 0 ~ 12, default: 6]
        I:tier=6
    }

}


fluidhatch {

    tiny {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 100]
        I:size=10
    }

    small {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 400]
        I:size=20
    }

    normal {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 1000]
        I:size=40
    }

    reinforced {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 2000]
        I:size=80
    }

    big {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 4500]
        I:size=160
    }

    huge {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 8000]
        I:size=320
    }

    ludicrous {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 16000]
        I:size=640
    }

    vacuum {
        # Defines the tank size for the size-type of fluid hatch. [range: 1 ~ 2147483647, default: 32000]
        I:size=1280
    }

}


general {
    # Defines the _default_ color for machine casings as items or blocks. (Hex color without alpha) Has to be defined both server and clientside! [default: FF4900]
    S:general-casing-color=FF4900
}


